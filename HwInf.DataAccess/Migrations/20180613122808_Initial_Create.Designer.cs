// <auto-generated />
using System;
using HwInf.DataAccess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace HwInf.DataAccess.Migrations
{
    [DbContext(typeof(HwInfContext))]
    [Migration("20180613122808_Initial_Create")]
    partial class Initial_Create
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("HwInf.Common.Models.Accessory", b =>
                {
                    b.Property<int>("AccessoryId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<string>("Slug");

                    b.HasKey("AccessoryId");

                    b.ToTable("Accessories");
                });

            modelBuilder.Entity("HwInf.Common.Models.Damage", b =>
                {
                    b.Property<int>("DamageId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CausePersId");

                    b.Property<int>("DamageStatusStatusId");

                    b.Property<DateTime>("Date");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<int?>("DeviceId");

                    b.Property<int?>("ReporterPersId");

                    b.HasKey("DamageId");

                    b.HasIndex("CausePersId");

                    b.HasIndex("DamageStatusStatusId");

                    b.HasIndex("DeviceId");

                    b.HasIndex("ReporterPersId");

                    b.ToTable("Damages");
                });

            modelBuilder.Entity("HwInf.Common.Models.DamageStatus", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Slug")
                        .IsRequired();

                    b.HasKey("StatusId");

                    b.ToTable("DamageStatus");

                    b.HasData(
                        new { StatusId = 1, Name = "Gemeldet", Slug = "gemeldet" },
                        new { StatusId = 2, Name = "Behoben", Slug = "behoben" },
                        new { StatusId = 3, Name = "Dauerhaft", Slug = "dauerhaft" }
                    );
                });

            modelBuilder.Entity("HwInf.Common.Models.Device", b =>
                {
                    b.Property<int>("DeviceId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Brand");

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("DeviceGroupSlug");

                    b.Property<string>("InvNum");

                    b.Property<bool>("IsActive");

                    b.Property<string>("Name");

                    b.Property<string>("Notes");

                    b.Property<int?>("PersonPersId");

                    b.Property<string>("Room");

                    b.Property<int?>("StatusId");

                    b.Property<int?>("TypeId");

                    b.HasKey("DeviceId");

                    b.HasIndex("PersonPersId");

                    b.HasIndex("StatusId");

                    b.HasIndex("TypeId");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("HwInf.Common.Models.DeviceMeta", b =>
                {
                    b.Property<int>("MetaId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("DeviceId");

                    b.Property<string>("FieldGroupName")
                        .IsRequired();

                    b.Property<string>("FieldGroupSlug")
                        .IsRequired();

                    b.Property<string>("FieldName")
                        .IsRequired();

                    b.Property<string>("FieldSlug")
                        .IsRequired();

                    b.Property<string>("MetaValue")
                        .IsRequired();

                    b.HasKey("MetaId");

                    b.HasIndex("DeviceId");

                    b.ToTable("DeviceMeta");
                });

            modelBuilder.Entity("HwInf.Common.Models.DeviceStatus", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .IsRequired();

                    b.HasKey("StatusId");

                    b.ToTable("DeviceStatus");

                    b.HasData(
                        new { StatusId = 1, Description = "Verfügbar" },
                        new { StatusId = 2, Description = "Ausgeliehen" },
                        new { StatusId = 3, Description = "In Reparatur" },
                        new { StatusId = 4, Description = "Archiviert" },
                        new { StatusId = 5, Description = "Nicht verleihbar" },
                        new { StatusId = 6, Description = "Präsentations-/Bachelorarbeitsgerät" }
                    );
                });

            modelBuilder.Entity("HwInf.Common.Models.DeviceType", b =>
                {
                    b.Property<int>("TypeId")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("IsActive");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Slug");

                    b.HasKey("TypeId");

                    b.ToTable("DeviceTypes");
                });

            modelBuilder.Entity("HwInf.Common.Models.DeviceTypeFieldGroup", b =>
                {
                    b.Property<int>("DeviceTypeId");

                    b.Property<int>("FieldGroupId");

                    b.HasKey("DeviceTypeId", "FieldGroupId");

                    b.HasIndex("FieldGroupId");

                    b.ToTable("DeviceTypeFieldGroup");
                });

            modelBuilder.Entity("HwInf.Common.Models.Field", b =>
                {
                    b.Property<int>("FieldId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("FieldGroupGroupId");

                    b.Property<string>("Name");

                    b.Property<string>("Slug");

                    b.HasKey("FieldId");

                    b.HasIndex("FieldGroupGroupId");

                    b.ToTable("Fields");
                });

            modelBuilder.Entity("HwInf.Common.Models.FieldGroup", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsCountable");

                    b.Property<string>("Name");

                    b.Property<string>("Slug");

                    b.HasKey("GroupId");

                    b.ToTable("FieldGroups");
                });

            modelBuilder.Entity("HwInf.Common.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Date");

                    b.Property<int?>("EntleiherPersId");

                    b.Property<DateTime>("From");

                    b.Property<Guid>("OrderGuid");

                    b.Property<string>("OrderReason")
                        .IsRequired();

                    b.Property<int>("OrderStatusStatusId");

                    b.Property<DateTime>("ReturnDate");

                    b.Property<DateTime>("To");

                    b.Property<int?>("VerwalterPersId");

                    b.HasKey("OrderId");

                    b.HasIndex("EntleiherPersId");

                    b.HasIndex("OrderStatusStatusId");

                    b.HasIndex("VerwalterPersId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("HwInf.Common.Models.OrderItem", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Accessories");

                    b.Property<DateTime>("CreateDate");

                    b.Property<int?>("DeviceId");

                    b.Property<int?>("EntleiherPersId");

                    b.Property<DateTime>("From");

                    b.Property<bool>("IsDeclined");

                    b.Property<int?>("OrderId");

                    b.Property<DateTime>("ReturnDate");

                    b.Property<DateTime>("To");

                    b.Property<int?>("VerwalterPersId");

                    b.HasKey("ItemId");

                    b.HasIndex("DeviceId");

                    b.HasIndex("EntleiherPersId");

                    b.HasIndex("OrderId");

                    b.HasIndex("VerwalterPersId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("HwInf.Common.Models.OrderStatus", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Slug")
                        .IsRequired();

                    b.HasKey("StatusId");

                    b.ToTable("OrderStatus");

                    b.HasData(
                        new { StatusId = 1, Name = "Offen", Slug = "offen" },
                        new { StatusId = 2, Name = "Akzeptiert", Slug = "akzeptiert" },
                        new { StatusId = 3, Name = "Abgelehnt", Slug = "abgelehnt" },
                        new { StatusId = 4, Name = "Abgeschlossen", Slug = "abgeschlossen" },
                        new { StatusId = 5, Name = "Ausgeliehen", Slug = "ausgeliehen" },
                        new { StatusId = 6, Name = "Abgebrochen", Slug = "abgebrochen" }
                    );
                });

            modelBuilder.Entity("HwInf.Common.Models.Person", b =>
                {
                    b.Property<int>("PersId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("RoleId");

                    b.Property<string>("Room");

                    b.Property<string>("Studiengang");

                    b.Property<string>("Tel");

                    b.Property<string>("Uid")
                        .IsRequired();

                    b.HasKey("PersId");

                    b.HasIndex("RoleId");

                    b.HasIndex("Uid")
                        .IsUnique();

                    b.ToTable("Persons");

                    b.HasData(
                        new { PersId = 1, Email = "jan.calanog@technikum-wien.at", LastName = "Calanog", Name = "Jan", RoleId = 1, Uid = "if15b042" },
                        new { PersId = 2, Email = "tobias.schlachter@technikum-wien.at", LastName = "Schlachter", Name = "Tobias", RoleId = 1, Uid = "if15b032" },
                        new { PersId = 3, Email = "valentin.sagl@technikum-wien.at", LastName = "Sagl", Name = "Valentin", RoleId = 1, Uid = "if15b030" },
                        new { PersId = 4, Email = "sebastian.slowak@technikum-wien.at", LastName = "Slowak", Name = "Sebastian", RoleId = 1, Uid = "if15b049" }
                    );
                });

            modelBuilder.Entity("HwInf.Common.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("RoleId");

                    b.ToTable("Roles");

                    b.HasData(
                        new { RoleId = 1, Name = "Admin" },
                        new { RoleId = 2, Name = "User" },
                        new { RoleId = 3, Name = "Verwalter" }
                    );
                });

            modelBuilder.Entity("HwInf.Common.Models.Setting", b =>
                {
                    b.Property<string>("Key")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Value");

                    b.HasKey("Key");

                    b.ToTable("Settings");

                    b.HasData(
                        new { Key = "ss_start", Value = "15.02" },
                        new { Key = "ss_end", Value = "30.06" },
                        new { Key = "ws_end", Value = "31.01" },
                        new { Key = "ws_start", Value = "25.10" },
                        new { Key = "reminder_mail", Value = "bitte zurückbringen" },
                        new { Key = "new_order_mail", Value = "Neue Anfrage zu einem ihrer Geräte" },
                        new { Key = "accept_mail_above", Value = "oben" },
                        new { Key = "accept_mail_below", Value = "unten" },
                        new { Key = "decline_mail_above", Value = "oben" },
                        new { Key = "decline_mail_below", Value = "unten" },
                        new { Key = "days_before_reminder", Value = "7" }
                    );
                });

            modelBuilder.Entity("HwInf.Common.Models.Damage", b =>
                {
                    b.HasOne("HwInf.Common.Models.Person", "Cause")
                        .WithMany()
                        .HasForeignKey("CausePersId");

                    b.HasOne("HwInf.Common.Models.DamageStatus", "DamageStatus")
                        .WithMany()
                        .HasForeignKey("DamageStatusStatusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HwInf.Common.Models.Device", "Device")
                        .WithMany()
                        .HasForeignKey("DeviceId");

                    b.HasOne("HwInf.Common.Models.Person", "Reporter")
                        .WithMany()
                        .HasForeignKey("ReporterPersId");
                });

            modelBuilder.Entity("HwInf.Common.Models.Device", b =>
                {
                    b.HasOne("HwInf.Common.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonPersId");

                    b.HasOne("HwInf.Common.Models.DeviceStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.HasOne("HwInf.Common.Models.DeviceType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId");
                });

            modelBuilder.Entity("HwInf.Common.Models.DeviceMeta", b =>
                {
                    b.HasOne("HwInf.Common.Models.Device", "Device")
                        .WithMany("DeviceMeta")
                        .HasForeignKey("DeviceId");
                });

            modelBuilder.Entity("HwInf.Common.Models.DeviceTypeFieldGroup", b =>
                {
                    b.HasOne("HwInf.Common.Models.DeviceType", "DeviceType")
                        .WithMany("DeviceTypesFieldGroups")
                        .HasForeignKey("DeviceTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HwInf.Common.Models.FieldGroup", "FieldGroup")
                        .WithMany("DeviceTypeFieldGroups")
                        .HasForeignKey("FieldGroupId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HwInf.Common.Models.Field", b =>
                {
                    b.HasOne("HwInf.Common.Models.FieldGroup", "FieldGroup")
                        .WithMany("Fields")
                        .HasForeignKey("FieldGroupGroupId");
                });

            modelBuilder.Entity("HwInf.Common.Models.Order", b =>
                {
                    b.HasOne("HwInf.Common.Models.Person", "Entleiher")
                        .WithMany()
                        .HasForeignKey("EntleiherPersId");

                    b.HasOne("HwInf.Common.Models.OrderStatus", "OrderStatus")
                        .WithMany()
                        .HasForeignKey("OrderStatusStatusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HwInf.Common.Models.Person", "Verwalter")
                        .WithMany()
                        .HasForeignKey("VerwalterPersId");
                });

            modelBuilder.Entity("HwInf.Common.Models.OrderItem", b =>
                {
                    b.HasOne("HwInf.Common.Models.Device", "Device")
                        .WithMany()
                        .HasForeignKey("DeviceId");

                    b.HasOne("HwInf.Common.Models.Person", "Entleiher")
                        .WithMany()
                        .HasForeignKey("EntleiherPersId");

                    b.HasOne("HwInf.Common.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId");

                    b.HasOne("HwInf.Common.Models.Person", "Verwalter")
                        .WithMany()
                        .HasForeignKey("VerwalterPersId");
                });

            modelBuilder.Entity("HwInf.Common.Models.Person", b =>
                {
                    b.HasOne("HwInf.Common.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
